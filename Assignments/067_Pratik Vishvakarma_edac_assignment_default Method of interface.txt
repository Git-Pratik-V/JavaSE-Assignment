################################
Author :- Pratik Vishwakarma
Date :- 15/06/2021
Topic :- Assignment-Default Method of Interface
Language used :- Java
###############################


1) define interface "First" with "default void fun()" and interface "Second" with "default void fun()". 
Now derive a class Child from both these interfaces. 
Inside main function instantiate Child class instance and invoke "fun" method.


interface First
{
	default void fun()
	{
		System.out.println("in First interface");
	}
	
}
interface Second extends First
{
	default void fun()
	{
		First.super.fun();
		System.out.println("in Second interface");
	}
}
class Child implements Second
{

	@Override
	public void fun() {
		
		Second.super.fun();
	}
	
	public void dis(){
		
		System.out.println("in display method of child");
	}
	
}
public class Main1 {

	public static void main(String[] args) {
		Child c=new Child();
		c.dis();
		c.fun();

	}

}

2) define interface "Third" with "default void disp1()" and "static void disp2()" methods.
derive a class "Sub" from "Third" ( do not override "disp1")
inside main function invoke "disp1" and "disp2" methods.


interface Third
{
	default void disp1()
	{
		System.out.println("in First interface");
	}
	static void disp2()
	{
		System.out.println("in Third static method");
	}
	
}
class Sub implements Third
{
	public void fun()
	{
		System.out.println("in Sub Class");
	}
}
public class Main2 {

	public static void main(String[] args) {
	Sub s=new Sub();
	s.disp1();
	Third.disp2();
	s.fun();

	}

}

3)define interface "Fourth" with "default void disp3()" method.
define a class "Base1" with "public void disp3()" method,
now derive a class Sub1 from "Base1" and "Fourth". Sub1 class should have only "public void myfun()" method.
inside main create an object of "Sub1" and invoke "disp3".
once you get the result, also try to invoke "disp3" of "Fourth"

interface Fourth
{
	default void disp3()
	{
		System.out.println("in disp3 method");
	}
	static void disp2()
	{
		System.out.println("in Third static method");
	}
	
}
class Base1
{
	public void disp3()
{
	System.out.println("in Base1 Class disp3 method");
}
	
}
class Sub1 extends Base1 implements Fourth
{
	
	public void myfun()
	{
		Fourth.super.disp3();
		System.out.println("in Sub1 Class myfun method");
	}
}
public class Main3 {

	public static void main(String[] args) {
	Sub1 s=new Sub1();
	s.disp3();
	s.myfun();
	Fourth.disp2();
	}

}


4) define interface "Base1" with "default void fun1()".
derive an interface "Sub1" from "Base1" with "default void fun2()"
derive a class "Sub2" from "Sub1". It should have only "public void fun3()" method.

inside main function, create an object of "Sub2" and make sure when u invoke "fun3", it should call "Sub1's fun2" which should call "Base1's fun1" method.

interface Base3
{
	default void fun1()
	{
		System.out.println("in fun1 method of Base3");
	}
	
}
interface Sub3 extends Base3
{
	
	default void fun2()
	{
		Base3.super.fun1();
		System.out.println("in fun2 method of Sub3");
	}
	
	
}
class Sub2 implements Sub3
{
	
	public void fun3()
{ 
		Sub3.super.fun2();
	System.out.println("in fun3 of Sub2");
}
}
public class Main4 {

	public static void main(String args[])
	{
		Sub2 s=new Sub2();
		s.fun3();
	}
}


5) define interface "First" with "static void disp1()" method.
class "Base" with "static void disp2()" method.
derive a class "Sub" from "Base" and "First"
now define a class Demo in which define "main" method.
inside main show how many ways you can invoke "disp1" and "disp2" methods.

interface Base3
{
	default void fun1()
	{
		System.out.println("in fun1 method of Base3");
	}
	
}
interface Sub3 extends Base3
{
	
	default void fun2()
	{
		Base3.super.fun1();
		System.out.println("in fun2 method of Sub3");
	}
	
	
}
class Sub2 implements Sub3
{
	
	public void fun3()
{ 
		Sub3.super.fun2();
	System.out.println("in fun3 of Sub2");
}
}
public class Main4 {

	public static void main(String args[])
	{
		Sub2 s=new Sub2();
		s.fun3();
	}
}
