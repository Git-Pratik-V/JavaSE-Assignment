DataServ

import java.io.IOException;
import java.io.PrintWriter;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.hibernate.query.*;
import org.hibernate.Session;
import org.hibernate.Transaction;

import mypack.Dept;
import mypack.HibernateUtil;


/**
 * Servlet implementation class DataServ
 */
@WebServlet("/DataServ")
public class DataServ extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		PrintWriter out=response.getWriter();
		
		String ss = request.getParameter("loc");
		
		try
		{
			Session session = HibernateUtil.getSessionFactory().openSession();
			Query<?> query = session.createQuery("from Dept where loc=:val");
			query.setParameter("val",ss);
			List<Dept> mylist = (List<Dept>)query.list();
			
			request.setAttribute("key",mylist);
			RequestDispatcher rd = request.getRequestDispatcher("Data.jsp");
			rd.forward(request, response);
			
			//Session session=HibernateUtil.getSessionFactory().openSession();
			Transaction tra=session.beginTransaction();
			Dept d1=new Dept();
			d1.setId(Integer.parseInt(request.getParameter("id")));
			d1.setName(request.getParameter("nm"));
			d1.setLoc(request.getParameter("sl"));
			
		    session.save(d1);
		    tra.commit();
		    request.setAttribute("key",mylist);
			RequestDispatcher rs = request.getRequestDispatcher("Home.jsp");
			rs.forward(request, response);
		}
		
		catch(Exception ex)
		{
			ex.printStackTrace();
		}	

	}

}

---------------------------------------

Dept.java

package mypack;
// Generated Sep 18, 2020 5:57:58 AM by Hibernate Tools 3.2.2.GA

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * Dept generated by hbm2java
 */
@Entity
@Table(name = "dept", catalog = "final")
public class Dept implements java.io.Serializable {

	private int id;
	private String name;
	private String loc;

	public Dept() {
	}

	
	public Dept(int id) {
		this.id = id;
	}

	public Dept(int id, String name, String loc) {
		this.id = id;
		this.name = name;
		this.loc = loc;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	@Override
	public String toString() {
		return "Dept [id=" + id + ", name=" + name + ", loc=" + loc + "]";
	}

	public void setId(int id) {
		this.id = id;
	}

	@Column(name = "name", length = 20)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "loc", length = 20)
	public String getLoc() {
		return this.loc;
	}

	public void setLoc(String loc) {
		this.loc = loc;
	}

}

-----------------------

HibernateUtil.java

package mypack;



import org.hibernate.SessionFactory;
import org.hibernate.boot.Metadata;
import org.hibernate.boot.MetadataSources;
import org.hibernate.boot.registry.StandardServiceRegistryBuilder;
import org.hibernate.service.ServiceRegistry;

public class HibernateUtil {
  private static final SessionFactory sessionFactory; 
 static { 
      try { 
      	 // Create registry
      	 ServiceRegistry registry = new StandardServiceRegistryBuilder().configure().build();
      	
      	 // Create MetadataSources
           MetadataSources sources = new MetadataSources(registry);
           // Create Metadata
           Metadata metadata = sources.getMetadataBuilder().build();
           // Create SessionFactory
           sessionFactory = metadata.getSessionFactoryBuilder().build();
      } catch (Throwable ex) { 
          System.err.println("Initial SessionFactory creation failed." + ex); 
          throw new ExceptionInInitializerError(ex); 
      } 
  } 

  public static SessionFactory getSessionFactory() { 
      return sessionFactory; 
  } 
}


-----------------------

AddDept.java

<%@ page language="java" contentType="text/html; charset=ISO-8859-1"
    pageEncoding="ISO-8859-1"%>
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Insert title here</title>
<h1>Fill Department Details</h1>
</head>

<body>
<form action="DataServ" method="">
id: <input type="text" name="id"><br><br>
Name: <input type="text" name="nm"><br><br>
Loc: <input type="text" name="sl"><br><br>

<input type="submit">


</form>

</body>
</html>

---------------------

Data.jsp

<%@page isELIgnored="false" %> 
<form action="DataServ">
<label>Search Loaction</label>
<input type="text" name="loc"><br><br>
<input type="submit" value="search">
</form>
<br>

${requestScope.key}


--------------------------------

Home.jsp

 <h1>Welcome Page</h1><br>
<a href="AddDept.jsp" >click here for adding dept</a><br><br>
<a href="Data.jsp" >click here to enter loc</a><br><br>